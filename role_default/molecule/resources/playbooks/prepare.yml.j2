# Molecule prepare playbook. Sets up required system state before converge. It
# runs after instance creation and only once for the duration of the instances
# life. Optional but useful for isolating preparation steps to performance and
# clarity of the converge step.

---

- name: "Molecule | Prepare"
  hosts: "molecule"
  # gather_facts fails if Python is not installed on the target hosts. While
  # test targets are expected to have Python installed, this allows running
  # Molecule with virtually any container image before prepare (where Python
  # could be installed, e.g. with ansible.builtin.raw).
  gather_facts: false
  no_log: "{{ '{{' }} molecule_no_log {{ '}}' }}"
  tasks:

    - name: "Molecule | Prepare | Run basic verification of testing infrastructure"
      ansible.builtin.include_tasks:
        file: "../tasks/molecule/check-infra.yml"


    # This prevents testing whether the role itself verifies these facts'
    # availability but it avoids fragile workarounds (like parsing container
    # names) if additional platform specific preparations are needed.
    # No problem as our roles using the subset do proper availability checks.
    - name: "Molecule | Prepare | Gather playbook-specific facts"
      ansible.builtin.setup:
        gather_subset:
          - "distribution"
      when:
        - ansible_facts['distribution'] is not defined or
          ansible_facts['os_family'] is not defined


    - name: "Molecule | Prepare | Include additional tasks from ../tasks/prepare"
      ansible.builtin.include_tasks:
        file: "{{ '{{' }} __testing_prepare_loop_item {{ '}}' }}"
      when:
        - __testing_prepare_loop_item is file
      loop:
        - "../tasks/prepare/all.yml"
        - "../tasks/prepare/{{ '{{' }} inventory_hostname {{ '}}' }}.yml"
      loop_control:
        loop_var: "__testing_prepare_loop_item"


    # Container cleanup task like "rm -rf /var/lib/apt/lists/*" change the mtime
    # of the directory, causing ansible.builtin.apt installs to fail due to
    # missing cache, even with "cache_valid_time: 1800" or "update_cache: true".
    # More information: https://github.com/ansible/ansible/issues/79206
    - name: "Molecule | Prepare | Update apt cache (issue #79206 workaround)"
      ansible.builtin.apt:
        update_cache: true
      when:
        - ansible_facts is defined
        - ansible_facts['os_family'] is defined
        - (ansible_facts['os_family'] | lower) == 'debian'
